




データベース内検索方法
SELECT * FROM "Activities"
ORDER BY "updatedAt" DESC;




Sequelizeでできること


save()
変更をデータベースに保存します。新規作成されたインスタンスの場合はINSERTされ、既存インスタンスの場合はUPDATEされます。

destroy()
インスタンスをデータベースから削除します。

reload()
データベースから最新のデータを再取得し、インスタンスを更新します。

update(values)
指定した値でインスタンスのフィールドを更新し、データベースに保存します。
これにより、複数のフィールドを一度に更新できます。

increment(field, options)
指定したフィールドの値を増加させます。

decrement(field, options)
指定したフィールドの値を減少させます。

get(field)
指定したフィールドの値を取得します。

set(field, value)
指定したフィールドに値を設定します。
複数のフィールドに対して一度に値を設定することも可能です。

validate()
インスタンスのデータに対して、定義されたバリデーションルールを適用します。
エラーが発生した場合は例外がスローされます。

toJSON()
インスタンスをJSON形式のオブジェクトに変換します。
通常、APIレスポンスなどでインスタンスをシリアライズする際に使用されます。

increment(field, options)
指定したフィールドの値を増加させ、データベースに保存します。

decrement(field, options)
指定したフィールドの値を減少させ、データベースに保存します。

addHook(name, hook)
インスタンスに対してフックを追加します。
例えば、レコードが保存される前に特定の処理を実行するフックを定義できます。

hasChanged([key])
インスタンスの指定したキーの値が変更されたかどうかを確認します。

previous(key)
インスタンスの指定したキーの以前の値を取得します。

restore()
論理削除されたレコードを復元します。
これは、paranoid オプションが有効な場合にのみ使用できます。

isSoftDeleted()
レコードが論理削除されているかどうかを確認します。
paranoid オプションが有効な場合に使用できます。

getDataValue(key)
指定したキーの値を直接取得します。

setDataValue(key, value)
指定したキーの値を直接設定します。
